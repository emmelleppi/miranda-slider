{"version":3,"sources":["utils.js","SingleSlider.js","MultiSlider.js","multiple-slider.js","index.js"],"names":["formatStringToCamelCase","str","splitted","split","length","slice","map","word","toUpperCase","join","SingleSlider","noInfinite","switchInterval","initSwitchDelay","id","descEl","domEl","buttonPrev","buttonNext","currentIndex","lastIndex","mass","tension","friction","visible","father","useRef","useState","active","setActive","loaded","setLoaded","config","useMemo","domContent","Array","from","querySelectorAll","getBoundingClientRect","width","setWidth","imagesTags","links","getElementsByTagName","x","attributes","items","obj","i","style","rule","src","getAttribute","classes","className","desc","el","content","display","innerHTML","idx","useCallback","l","getPos","firstVis","firstVisIdx","useSprings","springs","set","prev","index","runSprings","y","vy","down","xDir","cancel","xMove","distance","fromButton","Math","abs","current","finalY","floor","position","prevPosition","rank","immediate","bind","useGesture","onDrag","offset","vx","vxvy","direction","movement","tap","linkEl","document","getElementById","href","window","location","filterTaps","useEffect","element","parent","parentNode","contains","wrapper","createElement","replaceChild","appendChild","callback","e","preventDefault","addEventListener","removeEventListener","forEach","name","value","setAttribute","s","append","classList","add","remove","stopPropagation","started","setStarted","idInterval","setInterval","clearInterval","setTimeout","ref","overflow","zIndex","div","willChange","transform","to","height","pointerEvents","easeOutExpo","pow","easeInExpo","defaultProps","draggedScale","draggedSpring","default","trailingSpring","releaseSpring","trailingDelay","Slider","children","realLength","noInnerScale","descs","margin","centered","onIndexChange","domItemsLength","slideStyle","slideClassName","onDragStart","onDragEnd","onTap","slideStyleFunc","root","useResizeObserver","axis","size","maxIndex","indexRef","restPos","velocity","visibleIndexes","Set","firstVisibleIndex","lastVisibleIndex","marcello","cb","slides","isIntersecting","target","Number","visibles","sort","child","observer","IntersectionObserver","t","observe","disconnect","_i","key","offsetLeft","offsetWidth","round","aaa","isPrev","isOver","dir","firstToMove","useDrag","first","last","dx","delta","sx","swipe","movX","pressedIndex","args","memo","get","v","sign","mov","clamp","requestAnimationFrame","ease","animateScale","scale","rootStyle","flexWrap","alignItems","WebkitUserSelect","userSelect","WebkitTouchCallout","flexDirection","touchAction","useSpring","duration","onPointerDown","onPointerUp","pos","data-index","flexFlow","transformStyle","justifyContent","trans","MultiSlider","marginMobile","noDrag","showAlts","cursor","isMobile","innerWidth","array","push","setIndex","setStyle","handleClick","_margin","itemsStyle","item","imgs","curr","next","setX","setY","xy","cursorSpring","setCursor","isVisible","onScroll","rect","domX","domY","top","innerHeight","cursorOuterHtml","setCursorOuterHtml","outerHTML","cursorRef","onPointerOver","getElementsByClassName","onPointerClick","isClicking","overflowX","onPointerEnter","onPointerLeave","onMouseMove","clientX","clientY","dangerouslySetInnerHTML","__html","opacity","onClick","SlidersInit","nodeElements","sliderWrapper","hasAttribute","parseInt","after","render","isNaN","multiNodeElements"],"mappings":"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","file":"static/js/main.ac1b06dd.chunk.js","sourcesContent":["export const formatStringToCamelCase = (str) => {\n  const splitted = str.split('-')\n  if (splitted.length === 1) return splitted[0]\n  return (\n    splitted[0] +\n    splitted\n      .slice(1)\n      .map((word) => word[0].toUpperCase() + word.slice(1))\n      .join('')\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { useSprings, animated } from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport { formatStringToCamelCase } from './utils'\n\nexport default function SingleSlider({\n  noInfinite,\n  switchInterval,\n  initSwitchDelay,\n  id,\n  descEl,\n  domEl,\n  buttonPrev,\n  buttonNext,\n  currentIndex,\n  lastIndex,\n  mass = 1,\n  tension = 70,\n  friction = 26,\n  visible = 1\n}) {\n  const father = useRef()\n\n  const [active, setActive] = useState(1)\n  const [loaded, setLoaded] = useState({})\n  const config = useMemo(\n    () => ({\n      mass,\n      tension,\n      friction\n    }),\n    [mass, tension, friction]\n  )\n  const domContent = domEl\n  const [width, setWidth] = useState(() => {\n    const imagesTags = Array.from(domContent.querySelectorAll('[data-slider-image]'))\n    const {width} = imagesTags[0].getBoundingClientRect()\n    return width\n  })\n\n  const [{ items, classes, desc, content, links }] = useState(() => {\n    const imagesTags = Array.from(domContent.querySelectorAll('[data-slider-image]'))\n    const links = Array.from(domContent.getElementsByTagName('a')).map((x) => x.attributes)\n    const items = imagesTags.map((x) => {\n      let obj = {}\n      for (let i = 0; i < x.style.length; i++) {\n        const rule = x.style[i]\n        obj[formatStringToCamelCase(rule)] = x.style[rule]\n      }\n      const src = x.getAttribute('src')\n      if (src) {\n        obj['backgroundImage'] = `url(${src})`\n      }\n      return obj\n    })\n    const classes = imagesTags.map((x) => x.className)\n    const desc = imagesTags.map((el) => el.getAttribute('alt'))\n    const content = Array.from(domContent.querySelectorAll('[data-slider-image-content]'))\n    domContent.style.display = 'none'\n    domContent.innerHTML = ''\n    return { items, classes, desc, content, links }\n  })\n\n  const idx = useCallback((x, l = items.length) => (x < 0 ? x + l : x) % l, [items])\n  const getPos = useCallback((i, firstVis, firstVisIdx) => idx(i - firstVis + firstVisIdx), [idx])\n  // Important only if specifyng width, centers the element in the slider\n  const offset = 0\n  const [springs, set] = useSprings(items.length, (i) => ({\n    x: (i < items.length - 1 ? i : -1) * width + offset,\n    config\n  }))\n  const prev = useRef([0, 1])\n  const index = useRef(0)\n\n  const runSprings = useCallback(\n    (y, vy, down, xDir, cancel, xMove, distance, fromButton) => {\n      // This decides if we move over to the next slide or back to the initial\n      if (!fromButton) {\n        if (down && (distance > width / 2 || Math.abs(vy) > 1)) {\n          if (!noInfinite || (noInfinite && ((active > 1 && xDir > 0) || (active < items.length && xDir < 0)))) {\n            cancel((index.current = index.current + (xDir > 0 ? -1 : 1)))\n          } else {\n            cancel()\n          }\n        }\n      }\n\n      if (index.current + 1 > items.length) {\n        setActive((index.current % items.length) + 1)\n      } else if (index.current < 0) {\n        setActive(items.length + ((index.current + 1) % items.length))\n      } else {\n        setActive(index.current + 1)\n      }\n\n      // The actual scrolling value\n      const finalY = index.current * width\n      // Defines currently visible slides\n      const firstVis = idx(Math.floor(finalY / width) % items.length)\n      const firstVisIdx = vy < 0 ? items.length - visible - 1 : 1\n      set((i) => {\n        const position = getPos(i, firstVis, firstVisIdx)\n        const prevPosition = getPos(i, prev.current[0], prev.current[1])\n        let rank =\n          firstVis -\n          (finalY < 0 ? items.length : 0) +\n          position -\n          firstVisIdx +\n          (finalY < 0 && firstVis === 0 ? items.length : 0)\n        return {\n          // x is the position of each of our slides\n          x: (-finalY % (width * items.length)) + width * rank + (down ? xMove : 0) + offset,\n          // this defines if the movement is immediate\n          // So when an item is moved from one end to the other we don't\n          // see it moving\n          immediate: vy < 0 ? prevPosition > position : prevPosition < position,\n          config\n        }\n      })\n      prev.current = [firstVis, firstVisIdx]\n    },\n    [noInfinite, active, items.length, width, idx, visible, set, getPos, config]\n  )\n\n  const bind = useGesture(\n    {\n      onDrag: ({ offset: [x], vxvy: [vx], down, direction: [xDir], cancel, distance, movement: [xMove], tap }) => {\n        if (tap) {\n          const linkEl = document.getElementById(`slider-link-${id}`)\n          if (linkEl.href && linkEl.href.length > 0) {\n            window.location.href = linkEl.href\n          }\n        }\n        if (vx) {\n          runSprings(-x, -vx, down, xDir, cancel, xMove, distance)\n        }\n      }\n    },\n    { filterTaps: true }\n  )\n\n  useEffect(() => {\n    const linkEl = document.getElementById(`slider-link-${id}`)\n    let element = father.current\n    if (!linkEl && links && links.length > 0 && element) {\n      let parent = element.parentNode\n      while (descEl && !parent.contains(descEl)) {\n        element = parent\n        parent = parent.parentNode\n      }\n      element = parent\n      parent = parent.parentNode\n      const wrapper = document.createElement('a')\n      wrapper.id = `slider-link-${id}`\n      parent.replaceChild(wrapper, element)\n      wrapper.appendChild(element)\n    }\n  }, [id, links, descEl])\n\n  useEffect(() => {\n    const linkEl = document.getElementById(`slider-link-${id}`)\n    if (linkEl) {\n      const callback = (e) => e.preventDefault()\n      linkEl.addEventListener('click', callback)\n      return () => linkEl.removeEventListener('click', callback)\n    }\n  }, [id])\n\n  useEffect(() => {\n    const linkEl = document.getElementById(`slider-link-${id}`)\n    const attributes = links[active - 1]\n    if (linkEl && attributes) {\n      Array.from(attributes).forEach(({ name, value }) => linkEl.setAttribute(name, value))\n    }\n  }, [active, id, links])\n\n  useEffect(() => {\n    if (!loaded[active - 1]) {\n      setLoaded((s) => {\n        return { [active - 1]: true, ...s }\n      })\n    }\n    if (currentIndex) {\n      currentIndex.innerHTML = active > 9 ? active : `0${active}`\n    }\n  }, [active, currentIndex, loaded])\n\n  useEffect(() => {\n    if (descEl) {\n      if (desc[active - 1]) {\n        descEl.innerHTML = desc[active - 1] || ''\n      }\n      if (content[active - 1]) {\n        descEl.innerHTML = ''\n        descEl.append(content[active - 1])\n      }\n    }\n  }, [loaded, content, setLoaded, active, descEl, desc])\n\n  useEffect(() => {\n    if (noInfinite) {\n      if (buttonPrev) {\n        if (active === 1) {\n          buttonPrev.classList.add('disabled')\n        } else {\n          buttonPrev.classList.remove('disabled')\n        }\n      }\n      if (buttonNext) {\n        if (active === items.length) {\n          buttonNext.classList.add('disabled')\n        } else {\n          buttonNext.classList.remove('disabled')\n        }\n      }\n    }\n  }, [noInfinite, active, buttonPrev, buttonNext, items.length])\n\n  useEffect(() => {\n    if (buttonPrev) {\n      const callback = (e) => {\n        e.stopPropagation()\n        e.preventDefault()\n        if ((noInfinite && active > 1) || !noInfinite) {\n          index.current += -1\n          runSprings(0, -1, true, -0, () => {}, -0, 0, true)\n        }\n      }\n      buttonPrev.addEventListener('click', callback)\n      return () => buttonPrev.removeEventListener('click', callback)\n    }\n  }, [noInfinite, active, buttonPrev, runSprings])\n\n  useEffect(() => {\n    if (buttonNext) {\n      const callback = (e) => {\n        e.stopPropagation()\n        e.preventDefault()\n        if (!noInfinite || (active < items.length && noInfinite)) {\n          index.current += 1\n          runSprings(0, 1, true, -0, () => {}, -0, 0, true)\n        }\n      }\n      buttonNext.addEventListener('click', callback)\n      return () => buttonNext.removeEventListener('click', callback)\n    }\n  }, [noInfinite, active, buttonNext, runSprings, items.length])\n\n  useEffect(() => {\n    const { width } = father.current.getBoundingClientRect()\n    setWidth(width)\n  }, [setWidth])\n\n  useEffect(() => {\n    if (lastIndex) {\n      lastIndex.innerHTML = items.length > 9 ? items.length : `0${items.length}`\n    }\n  }, [lastIndex, items])\n\n  const [started, setStarted] = useState(false)\n  useEffect(() => {\n    if (started && switchInterval && switchInterval > 0) {\n      const callback = () => {\n        index.current += 1\n        runSprings(0, 1, true, -0, () => {}, -0)\n      }\n      const idInterval = setInterval(callback, switchInterval)\n      return () => clearInterval(idInterval)\n    }\n  }, [switchInterval, runSprings, started])\n  useEffect(() => {\n    if (initSwitchDelay) {\n      setTimeout(() => setStarted(true), initSwitchDelay)\n    } else {\n      setStarted(true)\n    }\n  }, [setStarted, initSwitchDelay])\n\n  return (\n    <div\n      ref={father}\n      className={domContent.className}\n      {...bind()}\n      style={{\n        position: 'relative',\n        overflow: 'hidden'\n      }}>\n      {springs.map(({ x, display, zIndex }, i) => (\n        <animated.div\n          key={i}\n          className={domContent.className}\n          style={{\n            position: 'absolute',\n            willChange: 'transform',\n            zIndex,\n            display,\n            overflow: 'hidden',\n            transform: x.to((x) => `translate3d(${x}px,0,0)`)\n          }}>\n          <animated.div\n            style={{\n              width: '100%',\n              height: '100%',\n              willChange: 'transform',\n              overflow: 'hidden'\n            }}>\n            <animated.div\n              className={`${classes[i]}`}\n              style={{\n                ...items[i],\n                pointerEvents: 'none'\n              }}\n            />\n          </animated.div>\n        </animated.div>\n      ))}\n    </div>\n  )\n}\n","import { clamp } from 'lodash-es'\nimport { useRef, useEffect, useCallback } from 'react'\nimport { useSprings, animated, useSpring, config } from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport useResizeObserver from 'use-resize-observer'\n\nfunction easeOutExpo(x) {\n  return x === 1 ? 1 : 1 - Math.pow(2, -10 * x)\n}\nfunction easeInExpo(x) {\n  return x === 0 ? 0 : Math.pow(2, 10 * x - 10)\n}\n\nconst defaultProps = {\n  draggedScale: 1,\n  draggedSpring: config.default,\n  trailingSpring: config.default,\n  releaseSpring: config.default,\n  trailingDelay: 50\n}\n\n// style for the slides wrapper\nconst slidesWrapperStyle = () => ({\n  display: 'flex',\n  flexWrap: 'nowrap',\n  alignItems: 'stretch',\n  position: 'relative',\n  WebkitUserSelect: 'none',\n  userSelect: 'none',\n  WebkitTouchCallout: 'none',\n  flexDirection: 'row',\n  touchAction: 'pan-y'\n})\n\nexport default function Slider({\n  children,\n  index,\n  config,\n  noInfinite,\n  realLength,\n  noInnerScale,\n  descs,\n  margin,\n  centered,\n  onIndexChange,\n  domItemsLength,\n  className,\n  style,\n  slideStyle,\n  slideClassName,\n  draggedScale,\n  draggedSpring,\n  releaseSpring,\n  trailingSpring,\n  trailingDelay,\n  onDragStart,\n  onDragEnd,\n  onTap\n}) {\n  const slideStyleFunc = typeof slideStyle === 'function' ? slideStyle : () => slideStyle\n  // root holds are slides wrapper node and we use a ResizeObserver\n  // to observe its size in order to recompute the slides position\n  // when it changes\n  const root = useRef(null)\n  const { width, height } = useResizeObserver({ ref: root })\n\n  const axis = 'x'\n  const size = width\n\n  let [, maxIndex] = [0, domItemsLength - 1]\n  maxIndex = maxIndex > 0 ? maxIndex : children.length - 1 + maxIndex\n\n  // indexRef is an internal reference to the current slide index\n  const indexRef = useRef(index)\n\n  // restPos holds a reference to the adjusted position of the slider\n  // when rested\n  const restPos = useRef(0)\n  const velocity = useRef(0)\n\n  // visibleIndexes is a Set holding the index of slides that are\n  // currently partially or fully visible (intersecting) in the\n  // viewport\n  const visibleIndexes = useRef(new Set())\n  const firstVisibleIndex = useRef(0)\n  const lastVisibleIndex = useRef(0)\n\n  // instances holds a ref to an array of controllers\n  // to simulate a spring trail. Mechanics is directly\n  // copied from here https://github.com/react-spring/react-spring/blob/31200a79843ce85200b2a7692e8f14788e60f9e9/src/useTrail.js#L14\n  // const instances = useRef()\n\n  // callback called by the intersection observer updating\n  // visibleIndexes\n  const marcello = useRef()\n  const cb = (slides) => {\n    slides.forEach(({ isIntersecting, target }) =>\n      visibleIndexes.current[isIntersecting ? 'add' : 'delete'](Number(target.getAttribute('data-index')))\n    )\n    const visibles = Array.from(visibleIndexes.current).sort()\n    firstVisibleIndex.current = visibles[0]\n    lastVisibleIndex.current = visibles[visibles.length - 1]\n    if (marcello.current && marcello.current.children) {\n      const children = Array.from(marcello.current.children)\n      children.forEach((child) => (child.style.display = 'flex'))\n      visibles.forEach((x) => {\n        if (children[x]) {\n          children[x].style.display = 'none'\n        }\n      })\n    }\n  }\n\n  const observer = useRef(null)\n\n  // we add the slides to the IntersectionObserver:\n  // this is recomputed everytime the user adds or removes a slide\n  useEffect(() => {\n    if (!observer.current) observer.current = new IntersectionObserver(cb)\n    Array.from(root.current.children).forEach((t) => observer.current.observe(t))\n    return () => observer.current.disconnect()\n  }, [children.length, root])\n\n  // setting the springs with initial position set to restPos:\n  // this is important when adding slides since changing children\n  // length recomputes useSprings\n  const [springs, set] = useSprings(children.length, (_i) => {\n    // zIndex will make sure the dragged slide stays on top of the others\n    return {\n      x: restPos.current,\n      y: 0,\n      zIndex: 0,\n      config,\n      immediate: (key) => key === 'zIndex'\n    }\n  })\n\n  // everytime the index changes, we should calculate the right position\n  // of the slide so that its centered: this is recomputed everytime\n  // the index changes\n  useEffect(() => {\n    // if width and height haven't been set don't do anything\n    // (this happens on first render before useResizeObserver had the time to kick in)\n    if (!width || !height || !root.current.children[index]) return\n    // here we take the selected slide\n    // and calculate its position so its centered in the slides wrapper\n    const { offsetLeft, offsetWidth } = root.current.children[index]\n    restPos.current = Math.round(-offsetLeft) + (centered ? (width - offsetWidth) / 2 : 0)\n    // two options then:\n    // 1. the index was changed through gestures: in that case indexRef\n    // is equal to index, we just want to set the position where it should\n\n    if (indexRef.current === index) {\n      if (domItemsLength <= index && index < 2 * domItemsLength) {\n        set((_i) => ({\n          [axis]: restPos.current,\n          config: { ...releaseSpring, velocity: velocity.current }\n        }))\n      } else {\n        set((_i) => ({\n          [axis]: restPos.current,\n          config: { ...releaseSpring, velocity: velocity.current },\n          onRest: () => {\n            if (!centered && noInfinite) return\n            const aaa = domItemsLength + (index % domItemsLength)\n            if (!root.current.children[aaa]) return\n            const { offsetLeft, offsetWidth } = root.current.children[aaa]\n            restPos.current = Math.round(-offsetLeft) + (centered ? (width - offsetWidth) / 2 : 0)\n            set((_i) => ({\n              [axis]: restPos.current,\n              immediate: true\n            }))\n            onIndexChange(aaa)\n          }\n        }))\n      }\n    } else {\n      // 2. the user has changed the index props: in that case indexRef\n      // is outdated and different from index. We want to animate depending\n      // on the direction of the slide, with the furthest slide moving first\n      // trailing the others\n      const isPrev = index < domItemsLength\n      const isOver = index >= 2 * domItemsLength\n      if (isPrev || isOver) {\n        let aaa = 0\n        if (isPrev) {\n          aaa = indexRef.current + domItemsLength\n        }\n        if (isOver) {\n          aaa = indexRef.current - domItemsLength\n        }\n\n        if (!root.current.children[aaa]) return\n        const { offsetLeft, offsetWidth } = root.current.children[aaa]\n        restPos.current = Math.round(-offsetLeft) + (centered ? (width - offsetWidth) / 2 : 0)\n        set((_i) => ({\n          [axis]: restPos.current,\n          immediate: true\n        }))\n        if (isPrev) {\n          onIndexChange(index + domItemsLength)\n        }\n        if (isOver) {\n          onIndexChange(index - domItemsLength)\n        }\n        indexRef.current = aaa\n      } else {\n        const dir = index < indexRef.current ? -1 : 1\n        // if direction is 1 then the first slide to animate should be the lowest\n        // indexed visible slide, if -1 the highest\n        const firstToMove = dir > 0 ? firstVisibleIndex.current : lastVisibleIndex.current\n        set((i) => {\n          return {\n            [axis]: restPos.current,\n            // config: key => key === axis && releaseSpring,\n            config: releaseSpring,\n            delay: i * dir < firstToMove * dir ? 0 : Math.abs(firstToMove - i) * trailingDelay\n          }\n        })\n      }\n    }\n    // finally we update indexRef to match index\n    indexRef.current = index\n  }, [\n    maxIndex,\n    index,\n    set,\n    root,\n    axis,\n    height,\n    width,\n    releaseSpring,\n    draggedSpring,\n    trailingDelay,\n    centered,\n    domItemsLength,\n    onIndexChange,\n    noInfinite\n  ])\n\n  useEffect(() => {\n    if (root.current && root.current.children[indexRef.current]) {\n      const { offsetLeft, offsetWidth } = root.current.children[indexRef.current]\n      restPos.current = Math.round(-offsetLeft) + (centered ? (width - offsetWidth) / 2 : 0)\n      set((_i) => ({\n        [axis]: restPos.current,\n        immediate: true\n      }))\n    }\n  }, [centered, set, width])\n\n  // adding the bind listener\n  const bind = useDrag(\n    ({\n      first,\n      last,\n      tap,\n      vxvy: [vx],\n      delta: [dx],\n      swipe: [sx],\n      movement: [movX],\n      args: [pressedIndex],\n      // @ts-ignore\n      memo = springs[pressedIndex][axis].get()\n    }) => {\n      if (tap) {\n        onTap && onTap(pressedIndex)\n        return\n      }\n      const v = vx\n      const dir = -Math.sign(dx)\n      const mov = movX\n      const swipe = sx\n\n      if (noInfinite && ((index === 0 && mov > 0) || (index === domItemsLength - 1 && mov < 0))) {\n        return\n      }\n\n      if (first) {\n        // if this is the first drag event, we're trailing the controllers\n        // to the index being dragged and setting zIndex, scale and config\n        set((i) => {\n          return {\n            [axis]: memo + mov,\n            config: (key) => (key === axis && i === pressedIndex ? draggedSpring : trailingSpring),\n            zIndex: i === pressedIndex ? 10 : 0\n          }\n        })\n\n        // triggering onDragStart prop if it exists\n        onDragStart && onDragStart(pressedIndex)\n      } else if (last) {\n        // when the user releases the drag and the distance or speed are superior to a threshold\n        // we update the indexRef\n        if (Math.abs(mov) > size / 2 || swipe !== 0) {\n          // if (curr < 0) {\n          //   indexRef.current = maxIndex\n          // } else {\n          //   indexRef.current = Math.max(0, curr % (maxIndex + 1))\n          // }\n\n          indexRef.current = clamp(indexRef.current + (mov > 0 ? -1 : 1), 0, realLength)\n        }\n        // if the index is not equal to indexRef we know we've moved a slide\n        // so we tell the user to update its index in the next tick and our useEffect\n        // will do the rest. RAF is used to make sure we're not updating the index\n        // too fast: that might happen if the user wants to update a slide onClick\n        // TODO - need an example\n        if (index !== indexRef.current) {\n          velocity.current = v\n          requestAnimationFrame(() => onIndexChange(indexRef.current))\n        }\n        // if the index hasn't changed then we set the position back to where it should be\n        else\n          set(() => ({\n            [axis]: restPos.current,\n            // config: key => key === axis && releaseSpring,\n            config: releaseSpring\n          }))\n\n        // triggering onDragEnd prop if it exists\n        onDragEnd && onDragEnd(pressedIndex)\n        if (!noInnerScale) {\n          ease.current = easeInExpo\n          animateScale({\n            from: { scale: 1 },\n            to: { scale: 0 }\n          })\n        }\n      }\n\n      // if not we're just dragging and we're just updating the position\n      else {\n        const firstToMove = dir > 0 ? firstVisibleIndex.current : lastVisibleIndex.current\n        set((i) => {\n          return {\n            [axis]: mov + memo,\n            delay: i * dir < firstToMove * dir || i === pressedIndex ? 0 : Math.abs(firstToMove - i) * trailingDelay,\n            config: (key) => (key === axis && i === pressedIndex ? draggedSpring : trailingSpring)\n          }\n        })\n      }\n\n      // and returning memo to keep the initial position in cache along drag\n      return memo\n    },\n    { axis, filterTaps: true }\n  )\n\n  const rootStyle = slidesWrapperStyle()\n\n  const [{ scale }, animateScale] = useSpring(() => ({\n    from: { scale: 0 },\n    config: { duration: 1500 }\n  }))\n  const ease = useRef(easeOutExpo)\n  const onPointerDown = useCallback(() => {\n    if (noInnerScale) return\n    ease.current = easeOutExpo\n    animateScale({\n      from: { scale: 0 },\n      to: { scale: 1 }\n    })\n  }, [ease, animateScale, noInnerScale])\n  const onPointerUp = useCallback(() => {\n    if (noInnerScale) return\n    ease.current = easeInExpo\n    animateScale({\n      from: { scale: 1 },\n      to: { scale: 0 }\n    })\n  }, [ease, animateScale, noInnerScale])\n\n  return (\n    <div ref={root} className={className} style={{ ...rootStyle, ...style, ...(centered && { margin: '0 auto' }) }}>\n      {springs.map(({ [axis]: pos, zIndex }, i) => (\n        <animated.div\n          // passing the index as an argument will let our handler know\n          // which slide is being dragged\n          {...bind(i)}\n          key={i}\n          data-index={i}\n          className={slideClassName}\n          style={{\n            display: 'flex',\n            flexFlow: 'column nowrap',\n            alignItems: centered ? 'center' : 'flex-start',\n            ...slideStyleFunc(i),\n            zIndex,\n            [axis]: pos,\n            willChange: 'transform',\n            margin: `0 ${margin}vw 0 0`\n          }}>\n          <animated.div\n            onPointerDown={onPointerDown}\n            onPointerUp={onPointerUp}\n            style={{\n              transform: scale.to((x) => `scaleY(${1 - draggedScale * ease.current(x)})`),\n              overflow: 'hidden',\n              transformStyle: 'preserve-3d',\n              willChange: 'transform'\n            }}>\n            <animated.div\n              ref={marcello}\n              style={{\n                transform: scale.to(\n                  (x) => `scale(${1 + draggedScale * ease.current(x)}, ${1 + 2 * draggedScale * ease.current(x)})`\n                ),\n                willChange: 'transform',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                transformStyle: 'preserve-3d'\n              }}>\n              {children[i]}\n            </animated.div>\n          </animated.div>\n          {descs[i] && <div className=\"multi-slider-alt\">{descs[i]}</div>}\n        </animated.div>\n      ))}\n    </div>\n  )\n}\n\nSlider.defaultProps = defaultProps\n","import React, { useState, useCallback, useEffect, useMemo, useRef } from 'react'\nimport Slider from './MultiSlider'\nimport { useSpring, animated } from 'react-spring'\nimport { formatStringToCamelCase } from './utils'\n\nconst trans = (x, y) => `translate3d(${x}px,${y}px,0) `\n\nexport default function MultiSlider({\n  margin,\n  marginMobile,\n  noInfinite,\n  noDrag,\n  centered,\n  showAlts,\n  cursor,\n  domEl,\n  buttonPrev,\n  noInnerScale,\n  buttonNext,\n  currentIndex,\n  mass = 1,\n  tension = 70,\n  friction = 26,\n  lastIndex\n}) {\n  const isMobile = window.innerWidth <= 991\n  const domContent = domEl\n  const config = useMemo(\n    () => ({\n      mass,\n      tension,\n      friction\n    }),\n    [mass, tension, friction]\n  )\n  const [[imagesTags, realLength, domItemsLength]] = useState(() => {\n    const array = Array.from(domContent.querySelectorAll('[data-slider-image]'))\n    const realLength = array.length\n    if (noInfinite && !centered) {\n      if (window.innerWidth > 479) {\n        if (array[0]) {\n          array.push(array[0])\n        }\n        if (array[1]) {\n          array.push(array[1])\n        }\n        if (array[2]) {\n          array.push(array[2])\n        }\n        if (array[3]) {\n          array.push(array[3])\n        }\n      }\n      return [array, array.length, realLength]\n    }\n    return [[...array, ...array, ...array], 3 * array.length, realLength]\n  })\n\n  const [index, setIndex] = useState(noInfinite ? 0 : domItemsLength + 1)\n  const [style, setStyle] = useState()\n\n  const draggedScale = 0.05\n  const trailingDelay = 0\n  const [loaded, setLoaded] = useState({})\n\n  const handleClick = useCallback(\n    (i) => {\n      if (i !== index) {\n        setIndex(i)\n      }\n    },\n    [index, setIndex]\n  )\n\n  const _margin = useMemo(() => (isMobile ? marginMobile : margin), [margin, marginMobile, isMobile])\n\n  const itemsStyle = useMemo(\n    () =>\n      imagesTags.map((x) => {\n        let obj = {}\n        for (let i = 0; i < x.style.length; i++) {\n          const rule = x.style[i]\n          obj[formatStringToCamelCase(rule)] = x.style[rule]\n        }\n        return obj\n      }),\n    [imagesTags]\n  )\n\n  const descs = useMemo(\n    () =>\n      showAlts\n        ? imagesTags.map((item) => {\n            const imgs = item.getElementsByTagName('img')\n            if (imgs && imgs[0]) {\n              return imgs[0].getAttribute('alt')\n            }\n            return null\n          })\n        : [],\n    [showAlts, imagesTags]\n  )\n\n  useEffect(() => {\n    setStyle({\n      width: `10vw`\n      // margin: `0 0 0 ${(window.innerWidth * (isMobile ? marginMobile : margin)) / 100}px`\n    })\n    domContent.style.display = 'none'\n    domContent.innerHTML = ''\n  }, [imagesTags, isMobile, noDrag, setStyle, domContent, marginMobile, margin])\n\n  useEffect(() => {\n    if (currentIndex) {\n      const curr = (index + 1) % domItemsLength === 0 ? domItemsLength : (index + 1) % domItemsLength\n      currentIndex.innerHTML = curr > 9 ? `${curr}` : `0${curr}`\n    }\n  }, [loaded, setLoaded, index, currentIndex, domItemsLength])\n\n  useEffect(() => {\n    const callback = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      if ((noInfinite && index > 0) || !noInfinite) {\n        setIndex((s) => {\n          const curr = s - 1\n          if (curr < 0) {\n            return 0\n          }\n          return curr\n        })\n      }\n    }\n    if (buttonPrev) {\n      buttonPrev.addEventListener('click', callback)\n      return () => buttonPrev.removeEventListener('click', callback)\n    }\n  }, [buttonPrev, setIndex, domItemsLength, noInfinite, index])\n\n  useEffect(() => {\n    const callback = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      if ((noInfinite && index < domItemsLength - 1) || !noInfinite) {\n        setIndex((s) => {\n          const next = s + 1\n          if (next >= realLength) {\n            return s\n          }\n          return next\n        })\n      }\n    }\n    if (buttonNext) {\n      buttonNext.addEventListener('click', callback)\n      return () => buttonNext.removeEventListener('click', callback)\n    }\n  }, [buttonNext, domItemsLength, index, noInfinite, realLength, setIndex])\n\n  useEffect(() => {\n    if (noInfinite) {\n      if (buttonPrev) {\n        if (index === 0) {\n          buttonPrev.classList.add('disabled')\n        } else {\n          buttonPrev.classList.remove('disabled')\n        }\n      }\n      if (buttonNext) {\n        if (index === domItemsLength - 1) {\n          buttonNext.classList.add('disabled')\n        } else {\n          buttonNext.classList.remove('disabled')\n        }\n      }\n    }\n  }, [noInfinite, index, buttonPrev, buttonNext, domItemsLength])\n\n  useEffect(() => {\n    if (lastIndex) {\n      lastIndex.innerHTML = domItemsLength > 9 ? `${domItemsLength}` : `0${domItemsLength}`\n    }\n  }, [lastIndex, domItemsLength])\n\n  const father = useRef()\n  const [x, setX] = useState(0)\n  const [y, setY] = useState(0)\n  const [cursorSpring, setCursor] = useSpring(() => ({\n    xy: [0, 0]\n  }))\n  const isVisible = useRef(false)\n  const onScroll = useCallback(() => {\n    if (father.current) {\n      const rect = father.current.getBoundingClientRect()\n      const { x: domX, y: domY } = rect\n      if (x !== domX) {\n        setX(domX)\n      }\n      if (y !== domY) {\n        setY(domY)\n      }\n      if (!isVisible.current && rect.top < 2 * window.innerHeight) {\n        isVisible.current = true\n        if (!noInfinite) {\n          setIndex(domItemsLength)\n        }\n      }\n    }\n  }, [x, y, noInfinite, domItemsLength])\n\n  const [cursorOuterHtml, setCursorOuterHtml] = useState()\n\n  useEffect(() => {\n    if (cursor) {\n      const outerHTML = cursor.outerHTML.slice()\n      setCursorOuterHtml(outerHTML)\n      // cursor.style.display = 'none'\n    }\n  }, [cursor, setCursorOuterHtml])\n\n  useEffect(() => {\n    setInterval(onScroll, 500)\n  }, [onScroll])\n\n  const cursorRef = useRef()\n  const onPointerOver = useCallback(\n    (isOver) => {\n      if (cursorRef.current) {\n        const child = cursorRef.current.getElementsByClassName('cursor')[0]\n        if (isOver) {\n          child.classList.add('cursor-show')\n        } else {\n          child.classList.remove('cursor-show')\n          child.classList.remove('cursor-active')\n        }\n      }\n    },\n    [cursorRef]\n  )\n\n  const onPointerClick = useCallback(\n    (isClicking) => {\n      if (cursorRef.current) {\n        const child = cursorRef.current.getElementsByClassName('cursor')[0]\n        if (isClicking) {\n          child.classList.add('cursor-active')\n        } else {\n          child.classList.remove('cursor-active')\n        }\n      }\n    },\n    [cursorRef]\n  )\n\n  return (\n    <div\n      style={{ position: 'relative', overflowX: 'hidden' }}\n      ref={father}\n      onPointerEnter={() => !noDrag && onPointerOver(true)}\n      onPointerLeave={() => !noDrag && onPointerOver(false)}\n      onPointerDown={() => !noDrag && onPointerClick(true)}\n      onPointerUp={() => !noDrag && onPointerClick(false)}\n      onMouseMove={(e) => !noDrag && setCursor({ xy: [e.clientX - x, e.clientY - y] })}>\n      {cursorOuterHtml && !noDrag && (\n        <animated.div\n          ref={cursorRef}\n          dangerouslySetInnerHTML={{ __html: cursorOuterHtml }}\n          style={{\n            pointerEvents: 'none',\n            zIndex: 999,\n            position: 'absolute',\n            willChange: 'transform',\n            transform: cursorSpring.xy.to(trans)\n          }}></animated.div>\n      )}\n      {style && (\n        <Slider\n          index={index}\n          noDrag={noDrag}\n          draggedSpring={config}\n          trailingSpring={config}\n          releaseSpring={config}\n          centered={centered}\n          noInfinite={noInfinite}\n          noInnerScale={noInnerScale}\n          descs={descs}\n          margin={_margin}\n          realLength={realLength}\n          domItemsLength={domItemsLength}\n          className={domContent.className}\n          style={style}\n          slideStyle={(i) => itemsStyle[i]}\n          loaded={loaded}\n          // slideClassName=\"multiple-slider-image\"\n          onIndexChange={setIndex}\n          trailingDelay={trailingDelay}\n          draggedScale={draggedScale}>\n          {imagesTags.map((el, i) => (\n            <div\n              style={{\n                pointerEvents: noDrag ? 'auto' : 'none',\n                opacity: i >= domItemsLength && window.innerWidth < 479 && noInfinite && !centered ? 0 : 1\n              }}\n              key={i}\n              onClick={() => handleClick(i)}\n              dangerouslySetInnerHTML={{ __html: el.outerHTML }}\n            />\n          ))}\n        </Slider>\n      )}\n    </div>\n  )\n}\n","import { render } from 'react-dom'\nimport SingleSlider from './SingleSlider'\nimport MultiSlider from './multiple-slider'\n\nwindow.SlidersInit = () => {\n  const nodeElements = document.querySelectorAll('[data-slider-id]')\n  Array.from(nodeElements).forEach((el) => {\n    const id = el.getAttribute('data-slider-id')\n    const sliderWrapper = document.createElement('div')\n    const initSwitchDelay = el.getAttribute('data-slider-switch-init-delay')\n    const switchInterval = el.getAttribute('data-slider-switch-interval')\n    const noInfinite = el.hasAttribute('data-slider-no-infinite')\n    const mass = parseInt(el.getAttribute('data-slider-mass'), 10)\n    const tension = parseInt(el.getAttribute('data-slider-tension'), 10)\n    const friction = parseInt(el.getAttribute('data-slider-friction'), 10)\n    el.after(sliderWrapper)\n    const descEl = document.querySelectorAll(`[data-slider-desc=\"${id}\"]`)?.[0]\n    const buttonPrev = document.querySelectorAll(`[data-slider-button-prev=\"${id}\"]`)?.[0]\n    const buttonNext = document.querySelectorAll(`[data-slider-button-next=\"${id}\"]`)?.[0]\n    const currentIndex = document.querySelectorAll(`[data-slider-current-index=\"${id}\"]`)?.[0]\n    const lastIndex = document.querySelectorAll(`[data-slider-last-index=\"${id}\"]`)?.[0]\n    render(\n      <SingleSlider\n        id={id}\n        initSwitchDelay={switchInterval && initSwitchDelay && !noInfinite ? parseInt(initSwitchDelay, 10) : null}\n        switchInterval={switchInterval && !noInfinite ? parseInt(switchInterval, 10) : null}\n        noInfinite={noInfinite}\n        domEl={el}\n        descEl={descEl}\n        buttonPrev={buttonPrev}\n        buttonNext={buttonNext}\n        currentIndex={currentIndex}\n        lastIndex={lastIndex}\n        mass={isNaN(mass) ? null : mass}\n        tension={isNaN(tension) ? null : tension}\n        friction={isNaN(friction) ? null : friction}\n      />,\n      sliderWrapper\n    )\n  })\n\n  const multiNodeElements = document.querySelectorAll('[data-multi-slider-id]')\n  Array.from(multiNodeElements).forEach((el) => {\n    const id = el.getAttribute('data-multi-slider-id')\n    const showAlts = el.hasAttribute('data-multi-slider-show-alt')\n    const noDrag = el.hasAttribute('data-multi-slider-no-drag')\n    const noInfinite = el.hasAttribute('data-slider-no-infinite')\n    const mass = parseInt(el.getAttribute('data-multi-slider-mass'), 10)\n    const tension = parseInt(el.getAttribute('data-multi-slider-tension'), 10)\n    const friction = parseInt(el.getAttribute('data-multi-slider-friction'), 10)\n    const margin = el.getAttribute('data-multi-slider-margin')\n    const marginMobile = el.getAttribute('data-multi-slider-margin-mobile')\n    const noInnerScale = el.hasAttribute('data-slider-no-inner-scale')\n    const centered = el.hasAttribute('data-multi-slider-centered')\n    const sliderWrapper = document.createElement('div')\n    const cursor = document.getElementsByClassName('cursor')[0]\n    el.after(sliderWrapper)\n    const buttonPrev = document.querySelectorAll(`[data-slider-button-prev=\"${id}\"]`)?.[0]\n    const buttonNext = document.querySelectorAll(`[data-slider-button-next=\"${id}\"]`)?.[0]\n    const currentIndex = document.querySelectorAll(`[data-slider-current-index=\"${id}\"]`)?.[0]\n    const lastIndex = document.querySelectorAll(`[data-slider-last-index=\"${id}\"]`)?.[0]\n    render(\n      <MultiSlider\n        centered={centered}\n        noDrag={noDrag}\n        noInfinite={noInfinite}\n        noInnerScale={noInnerScale}\n        margin={margin ? parseInt(margin, 10) : 0}\n        marginMobile={marginMobile ? parseInt(marginMobile, 10) : 0}\n        showAlts={showAlts}\n        cursor={cursor}\n        domEl={el}\n        buttonPrev={buttonPrev}\n        buttonNext={buttonNext}\n        currentIndex={currentIndex}\n        lastIndex={lastIndex}\n        mass={isNaN(mass) ? null : mass}\n        tension={isNaN(tension) ? null : tension}\n        friction={isNaN(friction) ? null : friction}\n      />,\n      sliderWrapper\n    )\n  })\n}\n"],"sourceRoot":""}